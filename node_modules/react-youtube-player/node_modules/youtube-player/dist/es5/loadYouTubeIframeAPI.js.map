{"version":3,"sources":["loadYouTubeIframeAPI.js"],"names":[],"mappings":";;;;;;;;wBAAqB,UAAU;;;;0BACd,aAAa;;;;qBAEf,YAAM;AACjB,QAAI,cAAc,YAAA,CAAC;;;;;;;;;AASnB,kBAAc,GAAG,0BAAa,UAAC,OAAO,EAAK;AACvC,YAAI,QAAQ,YAAA,CAAC;;AAEb,gBAAQ,GAAG,MAAM,CAAC,uBAAuB,CAAC;;;;AAI1C,cAAM,CAAC,uBAAuB,GAAG,YAAM;AACnC,gBAAI,QAAQ,EAAE;AACV,wBAAQ,EAAE,CAAC;aACd;;AAED,mBAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACtB,CAAC;KACL,CAAC,CAAC;;AAEH,sEAA0C,CAAC;;AAE3C,WAAO,cAAc,CAAC;CACzB","file":"loadYouTubeIframeAPI.js","sourcesContent":["import Bluebird from 'bluebird';\nimport load from 'load-script';\n\nexport default () => {\n    let iframeAPIReady;\n\n    /**\n     * A promise that is resolved when window.onYouTubeIframeAPIReady is called.\n     * The promise is resolved with a reference to global.YT object.\n     *\n     * @param {Function} resolve\n     * @member {Object} iframeAPIReady\n     */\n    iframeAPIReady = new Bluebird((resolve) => {\n        let previous;\n\n        previous = global.onYouTubeIframeAPIReady;\n\n        // The API will call this function when page has finished downloading\n        // the JavaScript for the player API.\n        global.onYouTubeIframeAPIReady = () => {\n            if (previous) {\n                previous();\n            }\n\n            resolve(global.YT);\n        };\n    });\n\n    load(`https://www.youtube.com/iframe_api`);\n\n    return iframeAPIReady;\n};\n"],"sourceRoot":"/source/"}